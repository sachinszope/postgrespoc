/**
 * This class is generated by jOOQ
 */
package com.gooru.beans.jooq.public_.tables;


import com.gooru.beans.jooq.public_.Keys;
import com.gooru.beans.jooq.public_.Public;
import com.gooru.beans.jooq.public_.tables.records.GooruUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GooruUser extends TableImpl<GooruUserRecord> {

	private static final long serialVersionUID = -735168771;

	/**
	 * The reference instance of <code>public.gooru_user</code>
	 */
	public static final GooruUser GOORU_USER = new GooruUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GooruUserRecord> getRecordType() {
		return GooruUserRecord.class;
	}

	/**
	 * The column <code>public.gooru_user.id</code>.
	 */
	public final TableField<GooruUserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.gooru_user.user_name</code>.
	 */
	public final TableField<GooruUserRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>public.gooru_user.attributes</code>.
	 */
	public final TableField<GooruUserRecord, Object> ATTRIBUTES = createField("attributes", org.jooq.impl.SQLDataType.OTHER, this, "");

	/**
	 * The column <code>public.gooru_user.attributes_text</code>.
	 */
	public final TableField<GooruUserRecord, String> ATTRIBUTES_TEXT = createField("attributes_text", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * Create a <code>public.gooru_user</code> table reference
	 */
	public GooruUser() {
		this("gooru_user", null);
	}

	/**
	 * Create an aliased <code>public.gooru_user</code> table reference
	 */
	public GooruUser(String alias) {
		this(alias, GOORU_USER);
	}

	private GooruUser(String alias, Table<GooruUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private GooruUser(String alias, Table<GooruUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<GooruUserRecord, Integer> getIdentity() {
		return Keys.IDENTITY_GOORU_USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<GooruUserRecord> getPrimaryKey() {
		return Keys.GOORU_USER_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<GooruUserRecord>> getKeys() {
		return Arrays.<UniqueKey<GooruUserRecord>>asList(Keys.GOORU_USER_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GooruUser as(String alias) {
		return new GooruUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public GooruUser rename(String name) {
		return new GooruUser(name, null);
	}
}
